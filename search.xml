<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java-[第二篇 Java基础语法]</title>
    <url>/2019/11/03/Java-%E7%AC%AC%E4%BA%8C%E7%AF%87-Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h1 id="1-注释"><a href="#1-注释" class="headerlink" title="1. 注释"></a>1. 注释</h1><p>编写程序时添加注释：调高程序的可读性(编程思路和程序作用)。添加注释是一种良好的编程习惯。</p>
<p>注释不会出现在字节码.class文件中(编译器会跳过注释)。</p>
<p>Java的注释分为三种：单行注释，多行注释，文档注释。</p>
<p>单行注释：以”//“开头，”//“后面的内容为注释。</p>
<p>多行注释：以”/*“开头，以”*/“结尾，”/*“和“*/”之间的内容为注释。有两种形式：空白处多行注释，行内任意位置注释。</p>
<p>文档注释：以”/**“开头，以”*/“结尾，”/**“和”*/“之间的内容为注释。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Testing</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 文档注释</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 单行注释</span></span><br><span class="line">        System.out.println(<span class="string">"My Name is Liu Jinan"</span>);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">           多行注释1</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(<span class="string">"I Like Swimming"</span><span class="comment">/* 多行注释2 */</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="2-标识符"><a href="#2-标识符" class="headerlink" title="2. 标识符"></a>2. 标识符</h1><p>标识符：给包、类、方法、变量起名字。</p>
<p>标识符命名规则：</p>
<ol>
<li>以字母，下划线”_”，美元符号”$”开头，数字不能开头</li>
<li>不能包含空格，不可以使用关键字和保留字</li>
<li>严格区分大小写</li>
<li>见名知意</li>
</ol>
<table>
<thead>
<tr>
<th>标识符</th>
<th>规则</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td>包</td>
<td>全部小写</td>
<td>xxxyyyzzz</td>
</tr>
<tr>
<td>常量</td>
<td>全部大写 + 下划线</td>
<td>XXX_YYY_ZZZ</td>
</tr>
<tr>
<td>类、接口</td>
<td>首字母大写 + 驼峰原则</td>
<td>XxxYyyZzz</td>
</tr>
<tr>
<td>方法、变量</td>
<td>驼峰原则</td>
<td>xxxYyyZzz</td>
</tr>
</tbody></table>
<h1 id="3-变量"><a href="#3-变量" class="headerlink" title="3. 变量"></a>3. 变量</h1><table>
<thead>
<tr>
<th>变量</th>
<th>内容</th>
</tr>
</thead>
<tbody><tr>
<td>格式</td>
<td>变量类型  变量名  =  值</td>
</tr>
<tr>
<td>作用</td>
<td>保存数据</td>
</tr>
<tr>
<td>本质</td>
<td>可操作的存储空间（使用变量名访问）</td>
</tr>
<tr>
<td>要求</td>
<td>必须先声明，后使用；必须声明其数据类型（强类型语言）</td>
</tr>
<tr>
<td>三要素</td>
<td>变量名，变量类型，作用域</td>
</tr>
</tbody></table>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Testing</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//变量的声明:声明时赋值</span></span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">double</span> b = <span class="number">1.2</span>;</span><br><span class="line">        <span class="keyword">long</span> c = <span class="number">50</span>;</span><br><span class="line">        <span class="comment">//变量的声明:先声明后赋值</span></span><br><span class="line">        <span class="keyword">int</span> d;</span><br><span class="line">        d = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-1-变量的分类"><a href="#3-1-变量的分类" class="headerlink" title="3.1 变量的分类"></a>3.1 变量的分类</h2><h3 id="3-1-1-按照数据类型"><a href="#3-1-1-按照数据类型" class="headerlink" title="3.1.1 按照数据类型"></a>3.1.1 按照数据类型</h3><img src="/2019/11/03/Java-%E7%AC%AC%E4%BA%8C%E7%AF%87-Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/1.png" style="zoom:70%;">

<p>按照数据类型分类，变量分为基本数据类型和引用数据类型。</p>
<p>基本数据类型8种：byte，short，int，long，float，double，char，boolean。引用数据类型3种：类，接口，数组。字符串属于引用数据类型。</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>占用存储空间</th>
<th>范围</th>
</tr>
</thead>
<tbody><tr>
<td>byte</td>
<td>1字节</td>
<td>-128~127</td>
</tr>
<tr>
<td>short</td>
<td>2字节</td>
<td>$-2^15$ ~$2^15$-1</td>
</tr>
<tr>
<td>int</td>
<td>4字节</td>
<td></td>
</tr>
<tr>
<td>long</td>
<td>8字节</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-[第一篇 Java语言概述]</title>
    <url>/2019/11/01/Java-%E7%AC%AC%E4%B8%80%E7%AF%87-Java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<p>Java是面向对象编程、支持跨平台的程序设计语言。Java之父：James Gosling。</p>
<p>对于程序设计语言，本质就是规则，学习的目的：掌握规则，读懂代码，规范开发。</p>
<p>Java存在两种核心机制：Java虚拟机JVM(Java Virtual Machine)和垃圾回收机制GC(Garbage Collection)</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
</search>
